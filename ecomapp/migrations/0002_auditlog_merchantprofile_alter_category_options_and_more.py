# Generated by Django 5.0.1 on 2025-10-03 11:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ecomapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('EXPORT', 'Export'), ('IMPORT', 'Import')], max_length=50)),
                ('model_name', models.CharField(help_text='Name of the model being audited', max_length=50)),
                ('object_id', models.UUIDField(help_text='ID of the object being audited')),
                ('old_values', models.JSONField(blank=True, help_text='Previous values before change', null=True)),
                ('new_values', models.JSONField(blank=True, help_text='New values after change', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MerchantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('business_type', models.CharField(choices=[('RETAIL', 'Retail'), ('WHOLESALE', 'Wholesale'), ('SERVICE', 'Service'), ('MANUFACTURING', 'Manufacturing'), ('RESTAURANT', 'Restaurant'), ('CONSULTING', 'Consulting'), ('ONLINE', 'Online Business'), ('OTHER', 'Other')], default='OTHER', max_length=100)),
                ('base_currency', models.CharField(default='USD', max_length=3)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('fiscal_year_start', models.DateField(default='2024-01-01')),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('google_calendar_enabled', models.BooleanField(default=False)),
                ('google_calendar_id', models.CharField(blank=True, max_length=200)),
                ('default_reminder_minutes', models.IntegerField(default=15)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['category_type', 'name'], 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='forecast',
            options={'ordering': ['-period_start']},
        ),
        migrations.RenameField(
            model_name='forecast',
            old_name='month',
            new_name='period_start',
        ),
        migrations.AlterUniqueTogether(
            name='forecast',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='category',
            name='color_code',
            field=models.CharField(default='#007bff', help_text='Hex color code for UI display', max_length=7),
        ),
        migrations.AddField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='category',
            name='merchant',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='currencyrate',
            name='source_api',
            field=models.CharField(default='exchangerate-api', help_text='Source API for the rate', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='attendees',
            field=models.JSONField(blank=True, default=list, help_text='List of attendee email addresses'),
        ),
        migrations.AddField(
            model_name='event',
            name='calendar_provider',
            field=models.CharField(choices=[('GOOGLE', 'Google Calendar'), ('OUTLOOK', 'Outlook'), ('OTHER', 'Other')], default='GOOGLE', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='currency',
            field=models.CharField(default='USD', help_text='Currency for associated amount', max_length=3),
        ),
        migrations.AddField(
            model_name='event',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='end_date',
            field=models.DateTimeField(blank=True, help_text='End date for events with duration', null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='is_recurring',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.CharField(blank=True, help_text='Event location or venue', max_length=500),
        ),
        migrations.AddField(
            model_name='event',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional event metadata'),
        ),
        migrations.AddField(
            model_name='event',
            name='parent_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurrence_instances', to='ecomapp.event'),
        ),
        migrations.AddField(
            model_name='event',
            name='priority',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='recurrence_rule',
            field=models.CharField(blank=True, help_text='Recurrence rule (RRULE format)', max_length=200),
        ),
        migrations.AddField(
            model_name='event',
            name='reminder_minutes',
            field=models.IntegerField(default=15, help_text='Reminder time in minutes before event'),
        ),
        migrations.AddField(
            model_name='event',
            name='reminder_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.JSONField(blank=True, default=list, help_text='Event tags for categorization'),
        ),
        migrations.AddField(
            model_name='forecast',
            name='confidence_level',
            field=models.IntegerField(choices=[(50, '50%'), (55, '55%'), (60, '60%'), (65, '65%'), (70, '70%'), (75, '75%'), (80, '80%'), (85, '85%'), (90, '90%'), (95, '95%'), (100, '100%')], default=80, help_text='Confidence level in percentage'),
        ),
        migrations.AddField(
            model_name='forecast',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_forecasts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='forecast',
            name='currency',
            field=models.CharField(default='USD', max_length=3),
        ),
        migrations.AddField(
            model_name='forecast',
            name='forecast_method',
            field=models.CharField(choices=[('HISTORICAL_AVERAGE', 'Historical Average'), ('LINEAR_TREND', 'Linear Trend'), ('SEASONAL', 'Seasonal Analysis'), ('MANUAL', 'Manual Entry'), ('AI_PREDICTION', 'AI Prediction')], default='HISTORICAL_AVERAGE', max_length=50),
        ),
        migrations.AddField(
            model_name='forecast',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Forecast metadata and assumptions'),
        ),
        migrations.AddField(
            model_name='forecast',
            name='period_end',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='base_currency_amount',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Amount converted to base currency', max_digits=15, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='transaction',
            name='currency',
            field=models.CharField(default='USD', help_text='ISO 4217 currency code', max_length=3),
        ),
        migrations.AddField(
            model_name='transaction',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='transaction',
            name='exchange_rate',
            field=models.DecimalField(blank=True, decimal_places=6, help_text='Exchange rate used for conversion', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transaction',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional transaction metadata'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='tags',
            field=models.JSONField(blank=True, default=list, help_text='Transaction tags for categorization'),
        ),
        migrations.AlterField(
            model_name='category',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='currencyrate',
            name='base_currency',
            field=models.CharField(db_index=True, max_length=3),
        ),
        migrations.AlterField(
            model_name='currencyrate',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='currencyrate',
            name='target_currency',
            field=models.CharField(db_index=True, max_length=3),
        ),
        migrations.AlterField(
            model_name='event',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Associated amount if applicable', max_digits=15, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='deadline_type',
            field=models.CharField(choices=[('TAX_PAYMENT', 'Tax Payment'), ('INVOICE_DUE', 'Invoice Due'), ('LOAN_REPAYMENT', 'Loan Repayment'), ('MEETING', 'Meeting'), ('REMINDER', 'Reminder'), ('DEADLINE', 'Deadline'), ('APPOINTMENT', 'Appointment'), ('REVIEW', 'Review'), ('AUDIT', 'Audit'), ('RENEWAL', 'Renewal'), ('OTHER', 'Other')], default='OTHER', max_length=50),
        ),
        migrations.AlterField(
            model_name='event',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='event',
            name='status',
            field=models.CharField(choices=[('UPCOMING', 'Upcoming'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('OVERDUE', 'Overdue'), ('IN_PROGRESS', 'In Progress'), ('RESCHEDULED', 'Rescheduled')], default='UPCOMING', max_length=20),
        ),
        migrations.AlterField(
            model_name='forecast',
            name='forecast_amount',
            field=models.DecimalField(decimal_places=4, max_digits=15),
        ),
        migrations.AlterField(
            model_name='forecast',
            name='forecast_type',
            field=models.CharField(choices=[('REVENUE', 'Revenue'), ('EXPENSE', 'Expense'), ('PROFIT', 'Profit'), ('CASH_FLOW', 'Cash Flow'), ('GROWTH', 'Growth Rate')], default='REVENUE', max_length=20),
        ),
        migrations.AlterField(
            model_name='forecast',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='amount',
            field=models.DecimalField(decimal_places=4, max_digits=15),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='payment_method',
            field=models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Credit/Debit Card'), ('BANK_TRANSFER', 'Bank Transfer'), ('MOBILE', 'Mobile Payment'), ('CRYPTOCURRENCY', 'Cryptocurrency'), ('CHECK', 'Check'), ('WIRE', 'Wire Transfer'), ('OTHER', 'Other')], default='CASH', max_length=50),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='reference_id',
            field=models.CharField(blank=True, db_index=True, max_length=200),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='status',
            field=models.CharField(choices=[('COMPLETED', 'Completed'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled'), ('REVERSED', 'Reversed'), ('FAILED', 'Failed')], default='COMPLETED', max_length=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=models.CharField(choices=[('INCOME', 'Income'), ('EXPENSE', 'Expense'), ('TRANSFER', 'Transfer')], default='EXPENSE', max_length=20),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('merchant', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='forecast',
            unique_together={('merchant', 'period_start', 'forecast_type')},
        ),
        migrations.AddIndex(
            model_name='currencyrate',
            index=models.Index(fields=['base_currency', 'target_currency'], name='ecomapp_cur_base_cu_3af5d8_idx'),
        ),
        migrations.AddIndex(
            model_name='currencyrate',
            index=models.Index(fields=['-fetched_at'], name='ecomapp_cur_fetched_46302d_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['deadline_type', 'event_date'], name='ecomapp_eve_deadlin_2b75a2_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['priority', 'event_date'], name='ecomapp_eve_priorit_3f9595_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['calendar_id'], name='ecomapp_eve_calenda_c829ea_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_deleted', 'event_date'], name='ecomapp_eve_is_dele_4519e1_idx'),
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['merchant', 'period_start'], name='ecomapp_for_merchan_ec3fdf_idx'),
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['forecast_type', 'period_start'], name='ecomapp_for_forecas_974327_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', '-transaction_date'], name='ecomapp_tra_transac_67684d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', '-transaction_date'], name='ecomapp_tra_status_defa75_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['currency', '-transaction_date'], name='ecomapp_tra_currenc_461dc0_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_id'], name='ecomapp_tra_referen_92c789_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['is_deleted', '-transaction_date'], name='ecomapp_tra_is_dele_872bf2_idx'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='merchant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_audits', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='merchantprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merchant_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['merchant', '-timestamp'], name='ecomapp_aud_merchan_559e5a_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['model_name', 'object_id'], name='ecomapp_aud_model_n_23c2be_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', '-timestamp'], name='ecomapp_aud_action_7ab239_idx'),
        ),
    ]
